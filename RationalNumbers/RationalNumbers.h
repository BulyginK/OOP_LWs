#pragma once

class CRational final
{
public:
    //  онструирует рациональное число, равное нулю (0/1)
    CRational();

    //  онструирует рациональное число, равное value (value/1)
    CRational(int value);

    //  онструирует рациональное число, равное numerator/denominator
    // –ациональное число должно хранитьс€ в нормализованном виде:
    // знаменатель положительный (числитель может быть отрицательным)
    // числитель и знаменатель не имеют общих делителей (6/8 => 3/4 и т.п.)
    // ≈сли знаменатель равен нулю, должно конструироватьс€ рациональное число, равное нулю,
    // либо должно быть выброшено исключение std::invalid_argument.
    CRational(int numerator, int denominator);

    // ¬озвращает числитель
    int GetNumerator() const;

    // ¬озвращает знаменатель (натуральное число)
    int GetDenominator() const;

    // ¬озвращает отношение числител€ и знаменател€ в виде числа double
    double ToDouble()const;

    // ѕрочие операторы согласно заданию
	CRational const operator-() const;
	CRational const operator+() const;

private:
    int m_numerator;
    int m_denominator;

    void Normalization();
};

int GCD(int a, int b);